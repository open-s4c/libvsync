/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2024. All rights reserved.
 * SPDX-License-Identifier: MIT
 */

#ifndef VATOMIC_CONFIG_PTR_SC_H
#define VATOMIC_CONFIG_PTR_SC_H
/* !!!Warning: File generated by tmpl; DO NOT EDIT.!!! */

#include <vsync/atomic/await.h>

#if defined(VATOMIC_ENABLE_ATOMIC_SC)

    #define VATOMICPTR_READ_RLX
static inline void *
vatomicptr_read_rlx(const vatomicptr_t *a)
{
    return vatomicptr_read(a);
}
    #define VATOMICPTR_READ_ACQ
static inline void *
vatomicptr_read_acq(const vatomicptr_t *a)
{
    return vatomicptr_read(a);
}

    #define VATOMICPTR_WRITE_RLX
static inline void
vatomicptr_write_rlx(vatomicptr_t *a, void *v)
{
    vatomicptr_write(a, v);
}
    #define VATOMICPTR_WRITE_REL
static inline void
vatomicptr_write_rel(vatomicptr_t *a, void *v)
{
    vatomicptr_write(a, v);
}

    #define VATOMICPTR_XCHG_RLX
static inline void *
vatomicptr_xchg_rlx(vatomicptr_t *a, void *v)
{
    return vatomicptr_xchg(a, v);
}
    #define VATOMICPTR_XCHG_ACQ
static inline void *
vatomicptr_xchg_acq(vatomicptr_t *a, void *v)
{
    return vatomicptr_xchg(a, v);
}
    #define VATOMICPTR_XCHG_REL
static inline void *
vatomicptr_xchg_rel(vatomicptr_t *a, void *v)
{
    return vatomicptr_xchg(a, v);
}

    #define VATOMICPTR_CMPXCHG_RLX
static inline void *
vatomicptr_cmpxchg_rlx(vatomicptr_t *a, void *e, void *v)
{
    return vatomicptr_cmpxchg(a, e, v);
}
    #define VATOMICPTR_CMPXCHG_ACQ
static inline void *
vatomicptr_cmpxchg_acq(vatomicptr_t *a, void *e, void *v)
{
    return vatomicptr_cmpxchg(a, e, v);
}
    #define VATOMICPTR_CMPXCHG_REL
static inline void *
vatomicptr_cmpxchg_rel(vatomicptr_t *a, void *e, void *v)
{
    return vatomicptr_cmpxchg(a, e, v);
}

    #define VATOMICPTR_AWAIT_EQ_RLX
static inline void *
vatomicptr_await_eq_rlx(const vatomicptr_t *a, void *v)
{
    return vatomicptr_await_eq(a, v);
}
    #define VATOMICPTR_AWAIT_NEQ_RLX
static inline void *
vatomicptr_await_neq_rlx(const vatomicptr_t *a, void *v)
{
    return vatomicptr_await_neq(a, v);
}
    #define VATOMICPTR_AWAIT_EQ_ACQ
static inline void *
vatomicptr_await_eq_acq(const vatomicptr_t *a, void *v)
{
    return vatomicptr_await_eq(a, v);
}
    #define VATOMICPTR_AWAIT_NEQ_ACQ
static inline void *
vatomicptr_await_neq_acq(const vatomicptr_t *a, void *v)
{
    return vatomicptr_await_neq(a, v);
}

    #define VATOMICPTR_AWAIT_NEQ_SET_RLX
static inline void *
vatomicptr_await_neq_set_rlx(vatomicptr_t *a, void *c, void *v)
{
    return vatomicptr_await_neq_set(a, c, v);
}
    #define VATOMICPTR_AWAIT_NEQ_SET_ACQ
static inline void *
vatomicptr_await_neq_set_acq(vatomicptr_t *a, void *c, void *v)
{
    return vatomicptr_await_neq_set(a, c, v);
}
    #define VATOMICPTR_AWAIT_NEQ_SET_REL
static inline void *
vatomicptr_await_neq_set_rel(vatomicptr_t *a, void *c, void *v)
{
    return vatomicptr_await_neq_set(a, c, v);
}

    #define VATOMICPTR_AWAIT_EQ_SET_RLX
static inline void *
vatomicptr_await_eq_set_rlx(vatomicptr_t *a, void *c, void *v)
{
    return vatomicptr_await_eq_set(a, c, v);
}
    #define VATOMICPTR_AWAIT_EQ_SET_ACQ
static inline void *
vatomicptr_await_eq_set_acq(vatomicptr_t *a, void *c, void *v)
{
    return vatomicptr_await_eq_set(a, c, v);
}
    #define VATOMICPTR_AWAIT_EQ_SET_REL
static inline void *
vatomicptr_await_eq_set_rel(vatomicptr_t *a, void *c, void *v)
{
    return vatomicptr_await_eq_set(a, c, v);
}

#endif
#endif
